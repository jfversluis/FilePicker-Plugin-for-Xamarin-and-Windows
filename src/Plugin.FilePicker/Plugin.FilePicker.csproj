<Project Sdk="MSBuild.Sdk.Extras/1.6.61">

  <PropertyGroup>
    <!--Work around so the conditions work below-->
    <TargetFrameworks></TargetFrameworks>
    <TargetFrameworks Condition=" '$(OS)' == 'Windows_NT' ">netstandard1.0;netstandard2.0;Xamarin.iOS10;MonoAndroid80;MonoAndroid81;MonoAndroid90;Xamarin.Mac20;net45;uap10.0.16299</TargetFrameworks>
    <TargetFrameworks Condition=" '$(OS)' != 'Windows_NT' ">netstandard1.0;netstandard2.0;Xamarin.iOS10;MonoAndroid80;MonoAndroid81;MonoAndroid90;Xamarin.Mac20;net45</TargetFrameworks>
    <AssemblyName>Plugin.FilePicker</AssemblyName>
    <RootNamespace>Plugin.FilePicker</RootNamespace>
    <PackageId>Xamarin.Plugin.FilePicker</PackageId>

    <Product>Xamarin.Plugin.FilePicker</Product>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyFileVersion>2.1.0.0</AssemblyFileVersion>
    <Version>2.1.0</Version>
    <PackageVersion>2.1.0-beta</PackageVersion>
    <PackOnBuild>true</PackOnBuild>
    <NeutralLanguage>en</NeutralLanguage>
    <LangVersion>default</LangVersion>
    <DefineConstants>$(DefineConstants);</DefineConstants>

    <UseFullSemVerForNuGet>false</UseFullSemVerForNuGet>
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>

    <LangVersion>latest</LangVersion>

    <PackageLicenseUrl>https://github.com/jfversluis/FilePicker-Plugin-for-Xamarin-and-Windows/blob/master/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/jfversluis/FilePicker-Plugin-for-Xamarin-and-Windows</PackageProjectUrl>
    <RepositoryUrl>https://github.com/jfversluis/FilePicker-Plugin-for-Xamarin-and-Windows</RepositoryUrl>
    <PackageReleaseNotes>[2.1] - Multi-Targeting Plugin project
[2.0] - Support for .NET Standard (platforms Xamarin.Android, Xamarin.iOS, Xamarin.Mac, Xamarin.Forms, UWP and Xamarin.Forms under WPF); removed Windows Phone 8 and Windows 8/8.1 support
[1.4] - Support Xamarin.Mac
[1.3] - FileData now has a GetStream() method to retrieve the binary data as a Stream
[1.2] - Retrieve full file path from selected file
[1.1] - Support Windows Phone 8, 8.1 e Windows Store.
[1.0] - Pick files, save files and open the archive in Default App.
    </PackageReleaseNotes>
    <!--<PackageIconUrl>ICON URL</PackageIconUrl>-->
    <PackageTags>xamarin, file, picker, filepicker, filebrowser, netstandard, plugin, plugin for xamarin, android, xamarin.forms, ios, wpf</PackageTags>

    <Title>FilePicker Plugin for Xamarin, Windows and Mac</Title>
    <Summary>Simple cross-platform plug-in that allows you to pick files and work with them. View full project page for README</Summary>
    <Description>Simple cross-platform plug-in that allows you to pick files and work with them. Version 2.0 now supports .NET Standard and Visual Studio 2017. Supported platforms are Xamarin.Android, Xamarin.iOS, Xamarin.Mac, Xamarin.Forms, UWP and Xamarin.Forms under WPF.</Description>

    <Owners>Gerald Versluis</Owners>
    <Authors>Gerald Versluis, rafaelrmou, vividos</Authors>
    <Copyright>Copyright 2017-2018 FilePicker team</Copyright>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>

    <!-- Publish the repository URL in the built .nupkg (in the NuSpec <Repository> element) -->
    <PublishRepositoryUrl>true</PublishRepositoryUrl>

    <!-- Embed source files that are not tracked by the source control manager in the PDB -->
    <EmbedUntrackedSources>true</EmbedUntrackedSources>

    <!-- Include the PDB in the built .nupkg -->
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)'=='Debug' ">
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)'=='Release' ">
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <DebugType>pdbonly</DebugType>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="**\*.shared.cs" />
  </ItemGroup>

  <ItemGroup Condition=" $(TargetFramework.StartsWith('netstandard')) ">
  </ItemGroup>

  <ItemGroup Condition=" $(TargetFramework.StartsWith('uap10.0')) ">
    <Compile Include="**\*.uwp.cs" />
  </ItemGroup>

  <ItemGroup Condition=" $(TargetFramework.StartsWith('MonoAndroid')) ">
    <Compile Include="**\*.android.cs" />
  </ItemGroup>

  <ItemGroup Condition=" $(TargetFramework.StartsWith('Xamarin.iOS')) ">
    <Compile Include="**\*.ios.cs" />
  </ItemGroup>

  <ItemGroup Condition=" $(TargetFramework.StartsWith('Xamarin.Mac')) ">
    <Compile Include="**\*.mac.cs" />
  </ItemGroup>

  <ItemGroup Condition=" $(TargetFramework.StartsWith('net45')) ">
    <Compile Include="**\*.net45.cs" />
    <Reference Include="PresentationFramework" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0-*" PrivateAssets="All"/>
  </ItemGroup>
</Project>
